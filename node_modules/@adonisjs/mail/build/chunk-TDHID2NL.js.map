{"version":3,"sources":["../src/messengers/memory_queue.ts"],"sourcesContent":["/*\n * @adonisjs/mail\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport fastq, { type done } from 'fastq'\nimport type { EmitterLike } from '@adonisjs/core/types/events'\n\nimport debug from '../debug.js'\nimport type { MailResponse } from '../mail_response.js'\nimport type {\n  MailEvents,\n  MailerContract,\n  MailerMessenger,\n  NodeMailerMessage,\n  MessageBodyTemplates,\n  MailTransportContract,\n} from '../types.js'\n\n/**\n * Worker to send emails\n */\nfunction sendEmail(\n  this: MemoryQueueMessenger,\n  task: {\n    mail: { message: NodeMailerMessage; views: MessageBodyTemplates }\n    sendConfig?: unknown\n  },\n  cb: done\n) {\n  this.mailer\n    .sendCompiled(task.mail, task.sendConfig)\n    .then((result) => cb(null, result))\n    .catch((error) => cb(error))\n}\n\n/**\n * Memory queue messenger uses \"fastq\" npm package to keep\n * emails within memory and send them in the chunks of 10\n */\nexport class MemoryQueueMessenger implements MailerMessenger {\n  #emitter: EmitterLike<MailEvents>\n  #queue = fastq(this, sendEmail, 10)\n  #jobCompletedCallback?: (error: Error | null, result: MailResponse<unknown>) => void = (\n    error\n  ) => {\n    if (error) {\n      this.#emitter.emit('queued:mail:error', {\n        error,\n        mailerName: this.mailer.name,\n      })\n    }\n  }\n\n  constructor(\n    public mailer: MailerContract<MailTransportContract>,\n    emitter: EmitterLike<MailEvents>\n  ) {\n    this.#emitter = emitter\n  }\n\n  /**\n   * Queues the email within memory\n   */\n  async queue(\n    mail: { message: NodeMailerMessage; views: MessageBodyTemplates },\n    sendConfig?: unknown\n  ) {\n    debug('pushing email to in-memory queue')\n    this.#queue.push(\n      {\n        mail,\n        sendConfig,\n      },\n      this.#jobCompletedCallback\n    )\n  }\n}\n"],"mappings":";;;;;;;;AASA,OAAOA,WAA0B;AAiBjC,SAASC,UAEPC,MAIAC,IAAQ;AAER,OAAKC,OACFC,aAAaH,KAAKI,MAAMJ,KAAKK,UAAU,EACvCC,KAAK,CAACC,WAAWN,GAAG,MAAMM,MAAAA,CAAAA,EAC1BC,MAAM,CAACC,UAAUR,GAAGQ,KAAAA,CAAAA;AACzB;AAZSV;AAkBF,IAAMW,uBAAN,MAAMA;EA5Cb,OA4CaA;;;;EACX;EACA;EACA;EAWAC,YACST,QACPU,SACA;SAFOV,SAAAA;SAbT,SAASW,MAAM,MAAMd,WAAW,EAAA;SAChC,wBAAuF,CACrFU,UAAAA;AAEA,UAAIA,OAAO;AACT,aAAK,SAASK,KAAK,qBAAqB;UACtCL;UACAM,YAAY,KAAKb,OAAOc;QAC1B,CAAA;MACF;IACF;AAME,SAAK,WAAWJ;EAClB;;;;EAKA,MAAMK,MACJb,MACAC,YACA;AACAa,kBAAM,kCAAA;AACN,SAAK,OAAOC,KACV;MACEf;MACAC;IACF,GACA,KAAK,qBAAqB;EAE9B;AACF;","names":["fastq","sendEmail","task","cb","mailer","sendCompiled","mail","sendConfig","then","result","catch","error","MemoryQueueMessenger","constructor","emitter","fastq","emit","mailerName","name","queue","debug","push"]}