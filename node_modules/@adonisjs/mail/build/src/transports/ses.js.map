{"version":3,"sources":["../../../src/transports/ses.ts"],"sourcesContent":["/*\n * @adonisjs/mail\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport nodemailer from 'nodemailer'\nimport SES from '@aws-sdk/client-ses'\nimport NodeMailerTransport from 'nodemailer/lib/ses-transport/index.js'\n\nimport debug from '../debug.js'\nimport { MailResponse } from '../mail_response.js'\nimport type { SESConfig, NodeMailerMessage, MailTransportContract } from '../types.js'\n\n/**\n * SES transport uses the Nodemailer inbuilt transport for sending\n * emails\n */\nexport class SESTransport implements MailTransportContract {\n  /**\n   * SES config\n   */\n  #config: SESConfig\n\n  /**\n   * The nodemailer transport\n   */\n  #transporter?: nodemailer.Transporter<NodeMailerTransport.SentMessageInfo>\n\n  constructor(config: SESConfig) {\n    this.#config = config\n  }\n\n  /**\n   * Create transporter instance\n   */\n  #createTransporter() {\n    if (this.#transporter) {\n      return this.#transporter\n    }\n\n    const SESClient = new SES.SES(this.#config)\n\n    this.#transporter = nodemailer.createTransport({\n      SES: { aws: SES, ses: SESClient },\n      sendingRate: this.#config.sendingRate,\n      maxConnections: this.#config.maxConnections,\n    })\n\n    return this.#transporter\n  }\n\n  /**\n   * Send message\n   */\n  async send(\n    message: NodeMailerMessage,\n    options?: Omit<SES.SendRawEmailRequest, 'RawMessage' | 'Source' | 'Destinations'>\n  ): Promise<MailResponse<NodeMailerTransport.SentMessageInfo>> {\n    const transporter = this.#createTransporter()\n    const mailOptions = Object.assign({}, message, { ses: options })\n\n    const sesResponse = await transporter.sendMail(mailOptions)\n    return new MailResponse(sesResponse.messageId, sesResponse.envelope, sesResponse)\n  }\n\n  /**\n   * Close transporter connection, helpful when using connections pool\n   */\n  async close() {\n    if (!this.#transporter) {\n      return\n    }\n\n    debug('closing ses transport')\n    this.#transporter.close()\n    this.#transporter = undefined\n  }\n}\n"],"mappings":";;;;;;;;;;;AASA,OAAOA,gBAAgB;AACvB,OAAOC,SAAS;AAWT,IAAMC,eAAN,MAAMA;EArBb,OAqBaA;;;;;;EAIX;;;;EAKA;EAEAC,YAAYC,QAAmB;AAC7B,SAAK,UAAUA;EACjB;;;;EAKA,qBAAkB;AAChB,QAAI,KAAK,cAAc;AACrB,aAAO,KAAK;IACd;AAEA,UAAMC,YAAY,IAAIC,IAAIA,IAAI,KAAK,OAAO;AAE1C,SAAK,eAAeC,WAAWC,gBAAgB;MAC7CF,KAAK;QAAEG,KAAKH;QAAKI,KAAKL;MAAU;MAChCM,aAAa,KAAK,QAAQA;MAC1BC,gBAAgB,KAAK,QAAQA;IAC/B,CAAA;AAEA,WAAO,KAAK;EACd;;;;EAKA,MAAMC,KACJC,SACAC,SAC4D;AAC5D,UAAMC,cAAc,KAAK,mBAAkB;AAC3C,UAAMC,cAAcC,OAAOC,OAAO,CAAC,GAAGL,SAAS;MAAEJ,KAAKK;IAAQ,CAAA;AAE9D,UAAMK,cAAc,MAAMJ,YAAYK,SAASJ,WAAAA;AAC/C,WAAO,IAAIK,aAAaF,YAAYG,WAAWH,YAAYI,UAAUJ,WAAAA;EACvE;;;;EAKA,MAAMK,QAAQ;AACZ,QAAI,CAAC,KAAK,cAAc;AACtB;IACF;AAEAC,kBAAM,uBAAA;AACN,SAAK,aAAaD,MAAK;AACvB,SAAK,eAAeE;EACtB;AACF;","names":["nodemailer","SES","SESTransport","constructor","config","SESClient","SES","nodemailer","createTransport","aws","ses","sendingRate","maxConnections","send","message","options","transporter","mailOptions","Object","assign","sesResponse","sendMail","MailResponse","messageId","envelope","close","debug","undefined"]}