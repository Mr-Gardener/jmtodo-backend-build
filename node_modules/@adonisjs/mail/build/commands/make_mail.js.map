{"version":3,"sources":["../../commands/make_mail.ts"],"sourcesContent":["/*\n * @adonisjs/mail\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { BaseCommand, args, flags } from '@adonisjs/core/ace'\nimport type { CommandOptions } from '@adonisjs/core/types/ace'\n\nimport { stubsRoot } from '../stubs/main.js'\n\nexport default class MakeMail extends BaseCommand {\n  static commandName = 'make:mail'\n  static description = 'Make a new mail class'\n  static options: CommandOptions = {\n    allowUnknownFlags: true,\n  }\n\n  /**\n   * The name of the mail file.\n   */\n  @args.string({ description: 'Name of the mail file' })\n  declare name: string\n\n  /**\n   * Define the intent suffix for the mail\n   */\n  @flags.string({ description: 'The intent suffix for the mail' })\n  declare intent?: string\n\n  /**\n   * Execute command\n   */\n  async run(): Promise<void> {\n    const codemods = await this.createCodemods()\n    await codemods.makeUsingStub(stubsRoot, 'make/mail/main.stub', {\n      flags: this.parsed.flags,\n      intent: this.intent || 'notification',\n      entity: this.app.generators.createEntity(this.name),\n    })\n  }\n}\n"],"mappings":";;;;;;;;AASA,SAASA,aAAaC,MAAMC,aAAa;AAFxC,SAAA,aAAA,YAAA,QAAA,KAAA,MAAA;;;;;;AAAA;;;;;AAOD,IAAqBC,WAArB,cAAsCC,YAAAA;EAdtC,OAcsCA;;;EACpC,OAAOC,cAAc;EACrB,OAAOC,cAAc;EACrB,OAAOC,UAA0B;IAC/BC,mBAAmB;EACrB;;;;EAiBA,MAAMC,MAAqB;AACzB,UAAMC,WAAW,MAAM,KAAKC,eAAc;AAC1C,UAAMD,SAASE,cAAcC,WAAW,uBAAuB;MAC7DC,OAAO,KAAKC,OAAOD;MACnBE,QAAQ,KAAKA,UAAU;MACvBC,QAAQ,KAAKC,IAAIC,WAAWC,aAAa,KAAKC,IAAI;IACpD,CAAA;EACF;AACF;;OApBQC,OAAAA;IAAShB,aAAa;;;;;QAMrBgB,OAAAA;IAAShB,aAAa;;;;","names":["BaseCommand","args","flags","MakeMail","BaseCommand","commandName","description","options","allowUnknownFlags","run","codemods","createCodemods","makeUsingStub","stubsRoot","flags","parsed","intent","entity","app","generators","createEntity","name","string"]}